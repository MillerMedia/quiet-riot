AWSTemplateFormatVersion: '2010-09-09'
Description: Child Account Resources

Resources:
  ChildSQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ChildRequestQueue

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                Resource: arn:aws:dynamodb:us-east-1:<MgmtAccountId>:table/ResultsTable
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource: !GetAtt ChildSQSQueue.Arn

  BatchRequestLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: BatchRequestLambda
      Handler: lambda_function.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: quiet-riot-global-bucket
        S3Key: lambda_code.zip
      Runtime: python3.9
      Environment:
        Variables:
          RESULTS_TABLE: arn:aws:dynamodb:us-east-1:<MgmtAccountId>:table/ResultsTable

  LambdaTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      EventSourceArn: !GetAtt ChildSQSQueue.Arn
      FunctionName: !GetAtt BatchRequestLambdaFunction.Arn
      Enabled: true
